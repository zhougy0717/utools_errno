[
    {
        "errno": "0",
        "title": "close_notify",
        "description": "Notifies the recipient that the sender will not send any more messages on this connection.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "10",
        "title": "unexpected_message",
        "description": "Received an inappropriate message This alert should never be observed in communication between proper implementations. This message is always fatal.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "20",
        "title": "bad_record_mac",
        "description": "Received a record with an incorrect MAC. This message is always fatal.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "21",
        "title": "decryption_failed",
        "description": "Decryption of a TLSCiphertext record is decrypted in an invalid way: either it was not an even multiple of the block length or its padding values, when checked, were not correct. This message is always fatal.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "22",
        "title": "record_overflow",
        "description": "Received a TLSCiphertext record which had a length more than 2^14+2048 bytes, or a record decrypted to a TLSCompressed record with more than 2^14+1024 bytes. This message is always fatal.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "30",
        "title": "decompression_failure",
        "description": "Received improper input, such as data that would expand to excessive length, from the decompression function. This message is always fatal.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "40",
        "title": "handshake_failure",
        "description": "Indicates that the sender was unable to negotiate an acceptable set of security parameters given the options available. This is a fatal error.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "42",
        "title": "bad_certificate",
        "description": "There is a problem with the certificate, for example, a certificate is corrupt, or a certificate contains signatures that cannot be verified.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "43",
        "title": "unsupported_certificate",
        "description": "Received an unsupported certificate type.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "44",
        "title": "certificate_revoked",
        "description": "Received a certificate that was revoked by its signer.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "45",
        "title": "certificate_expired",
        "description": "Received a certificate has expired or is not currently valid.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "46",
        "title": "certificate_unknown",
        "description": "An unspecified issue took place while processing the certificate that made it unacceptable.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "47",
        "title": "illegal_parameter",
        "description": "Violated security parameters, such as a field in the handshake was out of range or inconsistent with other fields. This is always fatal.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "48",
        "title": "unknown_ca",
        "description": "Received a valid certificate chain or partial chain, but the certificate was not accepted because the CA certificate could not be located or could not be matched with a known, trusted CA. This message is always fatal.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "49",
        "title": "access_denied",
        "description": "Received a valid certificate, but when access control was applied, the sender did not proceed with negotiation. This message is always fatal.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "50",
        "title": "decode_error",
        "description": "A message could not be decoded because some field was out of the specified range or the length of the message was incorrect. This message is always fatal.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "51",
        "title": "decrypt_error",
        "description": "Failed handshake cryptographic operation, including being unable to correctly verify a signature, decrypt a key exchange, or validate a finished message.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "60",
        "title": "export_restriction",
        "description": "Detected a negotiation that was not in compliance with export restrictions; for example, attempting to transfer a 1024 bit ephemeral RSA key for the RSA_EXPORT handshake method. This message is always fatal.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "70",
        "title": "protocol_version",
        "description": "The protocol version the client attempted to negotiate is recognized, but not supported. For example, old protocol versions might be avoided for security reasons. This message is always fatal.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "71",
        "title": "insufficient_security",
        "description": "Failed negotiation specifically because the server requires ciphers more secure than those supported by the client. Returned instead of handshake_failure. This message is always fatal.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "80",
        "title": "internal_error",
        "description": "An internal error unrelated to the peer or the correctness of the protocol makes it impossible to continue, such as a memory allocation failure. The error is not related to protocol. This message is always fatal.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "90",
        "title": "user_cancelled",
        "description": "Cancelled handshake for a reason that is unrelated to a protocol failure. If the user cancels an operation after the handshake is complete, just closing the connection by sending a close_notify is more appropriate. This alert should be followed by a close_notify. This message is generally a warning.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "100",
        "title": "no_renegotiation",
        "description": "Sent by the client in response to a hello request or sent by the server in response to a client hello after initial handshaking. Either of these would normally lead to renegotiation; when that is not appropriate, the recipient should respond with this alert; at that point, the original requester can decide whether to proceed with the connection. One case where this would be appropriate would be where a server has spawned a process to satisfy a request; the process might receive security parameters (key length, authentication, and so on) at start-up and it might be difficult to communicate changes to these parameters after that point. This message is always a warning.",
        "icon": "icons/tls.png"
    },
    {
        "errno": "255",
        "title": "unsupported_extension",
        "description": "",
        "icon": "icons/tls.png"
    }
]